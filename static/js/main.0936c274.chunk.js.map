{"version":3,"sources":["components/TodoList/TodoList.tsx","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/ListButton/ListButton.tsx","components/TodoTable/TodoTable.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterStatus","actionsTodo","todo","type","payload","currentTodoReducer","state","action","actionsFilter","text","status","initialState","query","filterReducer","actionsTodos","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","getLocalStorage","key","localStorage","getItem","JSON","parse","setLocalStorage","data","setItem","stringify","ListButton","dispatch","currentTodoOpen","className","onClick","TodoTable","React","memo","map","completed","id","title","TodoList","filteredTodos","useMemo","ALL","toLowerCase","includes","ACTIVE","COMPLETED","length","TodoFilter","useEffect","onSubmit","event","preventDefault","value","onChange","target","placeholder","style","pointerEvents","removeItem","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","userInfo","setUserInfo","userId","href","email","name","App","setTodos","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0936c274.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport React, { useMemo } from 'react';\nimport { useAppSelector } from '../../app/hooks';\nimport { TodoTable } from '../TodoTable';\n\nenum FilterStatus {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\nexport const TodoList: React.FC = React.memo(() => {\n  const todos = useAppSelector((state) => state.todos);\n  const filter = useAppSelector((state) => state.filter);\n\n  const filteredTodos = useMemo(() => {\n    return todos.filter((todo) => {\n      switch (filter.status) {\n        case FilterStatus.ALL:\n          return todo.title.toLowerCase().includes(filter.query.toLowerCase());\n        case FilterStatus.ACTIVE:\n          return (\n            todo.completed === false\n            && todo.title.toLowerCase().includes(filter.query.toLowerCase())\n          );\n        case FilterStatus.COMPLETED:\n          return (\n            todo.completed === true\n            && todo.title.toLowerCase().includes(filter.query.toLowerCase())\n          );\n\n        default:\n          return todo;\n      }\n    });\n  }, [todos, filter]);\n\n  return (\n    <>\n      {filteredTodos.length > 0 ? (\n        <TodoTable todos={filteredTodos} />\n      ) : (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n    </>\n  );\n});\n","import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actionsTodo = { setTodo, removeTodo };\n\nexport type StateTodo = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: StateTodo = null,\n  action: Action,\n): StateTodo => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return {\n        ...action.payload,\n      };\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","type SetQueryAction = {\n  type: 'filter/SET_QUERY';\n  payload: string;\n};\n\ntype RemoveQueryAction = {\n  type: 'filter/REMOVE_QUERY'\n};\n\ntype SetStatusAction = {\n  type: 'filter/STATUS';\n  payload: string;\n};\n\nconst setQuery = (text: string): SetQueryAction => ({\n  type: 'filter/SET_QUERY',\n  payload: text,\n});\n\nconst removeQuery = (): RemoveQueryAction => ({\n  type: 'filter/REMOVE_QUERY',\n});\n\nconst setStatus = (status: string): SetStatusAction => ({\n  type: 'filter/STATUS',\n  payload: status,\n});\n\nexport const actionsFilter = { setQuery, removeQuery, setStatus };\n\ntype StateFilter = {\n  query: string;\n  status: string;\n};\n\ntype Action = SetQueryAction | RemoveQueryAction | SetStatusAction;\n\nconst initialState: StateFilter = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (\n  state: StateFilter = initialState, action: Action,\n): StateFilter => {\n  switch (action.type) {\n    case 'filter/SET_QUERY':\n      return {\n        ...state,\n        query: action.payload,\n      };\n    case 'filter/REMOVE_QUERY':\n      return {\n        ...state,\n        query: '',\n      };\n    case 'filter/STATUS':\n      return {\n        ...state,\n        status: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosActions = {\n  type: 'todos/SET',\n  payload: Todo[];\n};\n\nconst setTodos = (todos: Todo[]): SetTodosActions => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nexport const actionsTodos = { setTodos };\n\ntype StateTodo = Todo[] | [];\ntype Action = SetTodosActions;\n\nconst todosReducer = (state: StateTodo = [], action: Action): StateTodo => {\n  switch (action.type) {\n    case 'todos/SET':\n      return [\n        ...action.payload,\n      ];\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { Todo } from '../types/Todo';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport const getLocalStorage = (key: string) => {\n  if (localStorage.getItem(key) !== null) {\n    return JSON.parse(localStorage.getItem(key) || '');\n  }\n\n  return null;\n};\n\nexport const setLocalStorage = (key: string, data: Todo[] | Todo | string) => {\n  return localStorage.setItem(key, JSON.stringify(data));\n};\n","import React from 'react';\nimport {\n  setLocalStorage,\n  useAppDispatch,\n  useAppSelector,\n} from '../../app/hooks';\nimport { actionsTodo } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const ListButton: React.FC<Props> = ({ todo }) => {\n  const dispatch = useAppDispatch();\n  const currentTodoOpen = useAppSelector(state => state.currentTodo);\n\n  const openTodo = (currentTodo: Todo) => {\n    dispatch(actionsTodo.setTodo(currentTodo));\n    setLocalStorage('currentTodo', currentTodo);\n  };\n\n  return (\n    <td className=\"has-text-right is-vcentered\">\n      <button\n        data-cy=\"selectButton\"\n        className=\"button\"\n        type=\"button\"\n        onClick={() => openTodo(todo)}\n      >\n        <span className=\"icon\">\n          <i\n            className={\n              currentTodoOpen !== null ? 'far fa-eye-slash' : 'far fa-eye'\n            }\n          />\n        </span>\n      </button>\n    </td>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { ListButton } from '../ListButton';\n\ntype Props = {\n  todos: Todo[] | [];\n};\n\nexport const TodoTable: React.FC<Props> = React.memo(({ todos }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos?.map((todo) => (\n          <tr data-cy=\"todo\" key={todo.id}>\n            {todo.completed ? (\n              <>\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p className=\"has-text-success\">{todo.title}</p>\n                </td>\n                <ListButton todo={todo} />\n              </>\n            ) : (\n              <>\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\"> </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p className=\"has-text-danger\">{todo.title}</p>\n                </td>\n                <ListButton todo={todo} />\n              </>\n            )}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import React, { useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actionsFilter } from '../../features/filter';\n\nexport const TodoFilter: React.FC = React.memo(() => {\n  const dispatch = useAppDispatch();\n  const { query, status } = useAppSelector((state) => state.filter);\n\n  useEffect(() => {\n    if (localStorage.getItem('todosStatus') !== null) {\n      dispatch(\n        actionsFilter.setStatus(\n          JSON.parse(localStorage.getItem('todosStatus') || ''),\n        ),\n      );\n    }\n\n    if (localStorage.getItem('todosQuery') !== null) {\n      dispatch(\n        actionsFilter.setQuery(\n          JSON.parse(localStorage.getItem('todosQuery') || ''),\n        ),\n      );\n    }\n  }, []);\n\n  const changeStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(actionsFilter.setStatus(event.target.value));\n    localStorage.setItem('todosStatus', JSON.stringify(event.target.value));\n  };\n\n  const addQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(actionsFilter.setQuery(event.target.value));\n    localStorage.setItem('todosQuery', JSON.stringify(event.target.value));\n  };\n\n  const removeQuery = () => {\n    dispatch(actionsFilter.removeQuery());\n    localStorage.removeItem('todosQuery');\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={(event) => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" value={status} onChange={changeStatus}>\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          value={query}\n          onChange={addQuery}\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={removeQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n});\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actionsTodo } from '../../features/currentTodo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = React.memo(() => {\n  const [userInfo, setUserInfo] = useState<User | null>(null);\n\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    if (currentTodo) {\n      getUser(currentTodo.userId).then((data) => setUserInfo(data));\n    }\n  }, []);\n\n  const closeTodo = () => {\n    dispatch(actionsTodo.removeTodo());\n    localStorage.removeItem('currentTodo');\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {userInfo && currentTodo !== null ? (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {currentTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo.completed ? (\n                <>\n                  <strong className=\"has-text-success\">Done</strong>\n                </>\n              ) : (\n                <>\n                  <strong className=\"has-text-danger\">Planned</strong>\n                </>\n              )}\n              {' by '}\n              <a href={`mailto:${userInfo.email}`}>{userInfo.name}</a>\n            </p>\n          </div>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n});\n","/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nimport { actionsTodos } from './features/todos';\nimport {\n  getLocalStorage,\n  setLocalStorage,\n  useAppDispatch,\n  useAppSelector,\n} from './app/hooks';\nimport { actionsTodo } from './features/currentTodo';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const todos = useAppSelector((state) => state.todos);\n  const currentTodo = useAppSelector((state) => state.currentTodo);\n\n  const setTodos = (data: Todo[]) => {\n    dispatch(actionsTodos.setTodos(data));\n  };\n\n  const setTodo = (data: Todo) => {\n    dispatch(actionsTodo.setTodo(data));\n  };\n\n  useEffect(() => {\n    if (getLocalStorage('todos') !== null) {\n      setTodos(getLocalStorage('todos'));\n    }\n\n    getTodos().then((data) => {\n      setLocalStorage('todos', data);\n      setTodos(getLocalStorage('todos'));\n    });\n\n    if (getLocalStorage('currentTodo') !== null) {\n      setTodo(getLocalStorage('currentTodo'));\n    }\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0 ? <TodoList /> : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo !== null && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}